#:schema https://raw.githubusercontent.com/YunoHost/apps/master/schemas/manifest.v2.schema.json

packaging_format = 2

id = "ultimate_ladder"
name = "Ultimate Ladder"
description.en = "A matchmaking website for creating balanced teams when playing ultimate frisbee"
description.fr = "Un site web de matchmaking pour créer des équipes équilibrées lors d'un match d'ultimate frisbee"

version = "1.0~ynh1"

maintainers = ["trahay"]

[upstream]
# NB: Only the "license" key is mandatory. Remove entries for which there's no relevant data
license = "MIT"
admindoc = "https://github.com/trahay/ultimate_ladder_ynh/"
code = "https://github.com/trahay/ultimate-ladder/"

[integration]
yunohost = ">= 11.2"
architectures = "all"
multi_instance = true
ldap = "true"
sso = "true"
disk = "300M"
ram.build = "50M"
ram.runtime = "50M"

[install]
    [install.domain]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    type = "domain"

    [install.path]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    type = "path"
    default = "/ultimate_ladder"

    [install.init_main_permission]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    # This won't be saved as setting and will instead be used to initialize the SSOwat permission
    type = "group"
    default = "admins"


[resources]
    [resources.system_user]
    # This will provision/deprovision a unix system user

    [resources.install_dir]
    # This will create/remove the install dir as /var/www/$app
    # and store the corresponding setting $install_dir

    [resources.data_dir]
    # This will create/remove the data dir as /home/yunohost.app/$app
    # and store the corresponding setting $data_dir

    [resources.permissions]
    # This will configure SSOwat permission for $domain/$path/
    # The initial allowed group of user is configured via the init_main_permission question (public=visitors, private=all_users)
    main.url = "/"

    [resources.ports]
    # This will pick a random port for reverse-proxying and store it as the $port setting

    [resources.apt]
    # This will automatically install/uninstall the following apt packages
    # and implicitly define the $phpversion setting as 8.0 (if phpX.Y-foobar dependencies are listed)
    packages = "build-essential, python3-dev, python3-pip, python3-venv, git, libpq-dev, postgresql, postgresql-contrib"

    [resources.database]
    # This will automatically provision/deprovison a MySQL DB and store the corresponding credentials in settings $db_user, $db_name, $db_pwd
    type = "postgresql"
